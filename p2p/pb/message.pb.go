// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p2p/pb/message.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Handshake protocol data used for both request and response - sent unencrypted over the wire
type HandshakeData struct {
	SessionId            []byte   `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientVersion        string   `protobuf:"bytes,4,opt,name=clientVersion,proto3" json:"clientVersion,omitempty"`
	NetworkID            int32    `protobuf:"varint,5,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Protocol             string   `protobuf:"bytes,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	NodePubKey           []byte   `protobuf:"bytes,7,opt,name=nodePubKey,proto3" json:"nodePubKey,omitempty"`
	Iv                   []byte   `protobuf:"bytes,8,opt,name=iv,proto3" json:"iv,omitempty"`
	PubKey               []byte   `protobuf:"bytes,9,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Hmac                 []byte   `protobuf:"bytes,10,opt,name=hmac,proto3" json:"hmac,omitempty"`
	Sign                 string   `protobuf:"bytes,11,opt,name=sign,proto3" json:"sign,omitempty"`
	Port                 uint32   `protobuf:"varint,12,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandshakeData) Reset()         { *m = HandshakeData{} }
func (m *HandshakeData) String() string { return proto.CompactTextString(m) }
func (*HandshakeData) ProtoMessage()    {}
func (*HandshakeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_1906b97a6055905c, []int{0}
}
func (m *HandshakeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeData.Unmarshal(m, b)
}
func (m *HandshakeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeData.Marshal(b, m, deterministic)
}
func (dst *HandshakeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeData.Merge(dst, src)
}
func (m *HandshakeData) XXX_Size() int {
	return xxx_messageInfo_HandshakeData.Size(m)
}
func (m *HandshakeData) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeData.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeData proto.InternalMessageInfo

func (m *HandshakeData) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *HandshakeData) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *HandshakeData) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *HandshakeData) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *HandshakeData) GetNetworkID() int32 {
	if m != nil {
		return m.NetworkID
	}
	return 0
}

func (m *HandshakeData) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *HandshakeData) GetNodePubKey() []byte {
	if m != nil {
		return m.NodePubKey
	}
	return nil
}

func (m *HandshakeData) GetIv() []byte {
	if m != nil {
		return m.Iv
	}
	return nil
}

func (m *HandshakeData) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *HandshakeData) GetHmac() []byte {
	if m != nil {
		return m.Hmac
	}
	return nil
}

func (m *HandshakeData) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *HandshakeData) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// used for protocol messages (non-handshake) - this is the decrypted CommonMessageData.payload
// it allows multi310.445plexing back to higher level protocols
// data is here and not in CommonMessageData to avoid leaked data on unencrypted connections
type ProtocolMessage struct {
	Metadata *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*ProtocolMessage_Payload
	//	*ProtocolMessage_Msg
	Data                 isProtocolMessage_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ProtocolMessage) Reset()         { *m = ProtocolMessage{} }
func (m *ProtocolMessage) String() string { return proto.CompactTextString(m) }
func (*ProtocolMessage) ProtoMessage()    {}
func (*ProtocolMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_1906b97a6055905c, []int{1}
}
func (m *ProtocolMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtocolMessage.Unmarshal(m, b)
}
func (m *ProtocolMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtocolMessage.Marshal(b, m, deterministic)
}
func (dst *ProtocolMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolMessage.Merge(dst, src)
}
func (m *ProtocolMessage) XXX_Size() int {
	return xxx_messageInfo_ProtocolMessage.Size(m)
}
func (m *ProtocolMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolMessage proto.InternalMessageInfo

func (m *ProtocolMessage) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type isProtocolMessage_Data interface {
	isProtocolMessage_Data()
}

type ProtocolMessage_Payload struct {
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3,oneof"`
}

type ProtocolMessage_Msg struct {
	Msg *MessageWrapper `protobuf:"bytes,3,opt,name=msg,proto3,oneof"`
}

func (*ProtocolMessage_Payload) isProtocolMessage_Data() {}

func (*ProtocolMessage_Msg) isProtocolMessage_Data() {}

func (m *ProtocolMessage) GetData() isProtocolMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ProtocolMessage) GetPayload() []byte {
	if x, ok := m.GetData().(*ProtocolMessage_Payload); ok {
		return x.Payload
	}
	return nil
}

func (m *ProtocolMessage) GetMsg() *MessageWrapper {
	if x, ok := m.GetData().(*ProtocolMessage_Msg); ok {
		return x.Msg
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProtocolMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProtocolMessage_OneofMarshaler, _ProtocolMessage_OneofUnmarshaler, _ProtocolMessage_OneofSizer, []interface{}{
		(*ProtocolMessage_Payload)(nil),
		(*ProtocolMessage_Msg)(nil),
	}
}

func _ProtocolMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProtocolMessage)
	// data
	switch x := m.Data.(type) {
	case *ProtocolMessage_Payload:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Payload)
	case *ProtocolMessage_Msg:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Msg); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ProtocolMessage.Data has unexpected type %T", x)
	}
	return nil
}

func _ProtocolMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProtocolMessage)
	switch tag {
	case 2: // data.payload
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Data = &ProtocolMessage_Payload{x}
		return true, err
	case 3: // data.msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MessageWrapper)
		err := b.DecodeMessage(msg)
		m.Data = &ProtocolMessage_Msg{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ProtocolMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProtocolMessage)
	// data
	switch x := m.Data.(type) {
	case *ProtocolMessage_Payload:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Payload)))
		n += len(x.Payload)
	case *ProtocolMessage_Msg:
		s := proto.Size(x.Msg)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Metadata struct {
	NextProtocol         string   `protobuf:"bytes,1,opt,name=nextProtocol,proto3" json:"nextProtocol,omitempty"`
	ClientVersion        string   `protobuf:"bytes,2,opt,name=clientVersion,proto3" json:"clientVersion,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AuthPubKey           []byte   `protobuf:"bytes,4,opt,name=authPubKey,proto3" json:"authPubKey,omitempty"`
	MsgSign              []byte   `protobuf:"bytes,5,opt,name=msgSign,proto3" json:"msgSign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_1906b97a6055905c, []int{2}
}
func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (dst *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(dst, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetNextProtocol() string {
	if m != nil {
		return m.NextProtocol
	}
	return ""
}

func (m *Metadata) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *Metadata) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Metadata) GetAuthPubKey() []byte {
	if m != nil {
		return m.AuthPubKey
	}
	return nil
}

func (m *Metadata) GetMsgSign() []byte {
	if m != nil {
		return m.MsgSign
	}
	return nil
}

type MessageWrapper struct {
	Type                 uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Req                  bool     `protobuf:"varint,2,opt,name=req,proto3" json:"req,omitempty"`
	ReqID                uint64   `protobuf:"varint,3,opt,name=reqID,proto3" json:"reqID,omitempty"`
	Payload              []byte   `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageWrapper) Reset()         { *m = MessageWrapper{} }
func (m *MessageWrapper) String() string { return proto.CompactTextString(m) }
func (*MessageWrapper) ProtoMessage()    {}
func (*MessageWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_1906b97a6055905c, []int{3}
}
func (m *MessageWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageWrapper.Unmarshal(m, b)
}
func (m *MessageWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageWrapper.Marshal(b, m, deterministic)
}
func (dst *MessageWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageWrapper.Merge(dst, src)
}
func (m *MessageWrapper) XXX_Size() int {
	return xxx_messageInfo_MessageWrapper.Size(m)
}
func (m *MessageWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_MessageWrapper proto.InternalMessageInfo

func (m *MessageWrapper) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MessageWrapper) GetReq() bool {
	if m != nil {
		return m.Req
	}
	return false
}

func (m *MessageWrapper) GetReqID() uint64 {
	if m != nil {
		return m.ReqID
	}
	return 0
}

func (m *MessageWrapper) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*HandshakeData)(nil), "pb.HandshakeData")
	proto.RegisterType((*ProtocolMessage)(nil), "pb.ProtocolMessage")
	proto.RegisterType((*Metadata)(nil), "pb.Metadata")
	proto.RegisterType((*MessageWrapper)(nil), "pb.MessageWrapper")
}

func init() { proto.RegisterFile("p2p/pb/message.proto", fileDescriptor_message_1906b97a6055905c) }

var fileDescriptor_message_1906b97a6055905c = []byte{
	// 438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x51, 0x6a, 0xdb, 0x40,
	0x10, 0x86, 0x23, 0x59, 0x76, 0xe4, 0xb1, 0x9d, 0x96, 0x21, 0x94, 0x25, 0x94, 0x20, 0x44, 0x29,
	0x7a, 0x72, 0xc0, 0xbd, 0x41, 0xf0, 0x83, 0x4d, 0x09, 0x84, 0x2d, 0xb4, 0xd0, 0xb7, 0x95, 0x35,
	0xb5, 0x45, 0x2c, 0x69, 0xa3, 0xdd, 0xa4, 0xf5, 0x09, 0x7a, 0x99, 0x5e, 0xa4, 0xb7, 0x2a, 0x3b,
	0x92, 0xa3, 0xa8, 0xa5, 0x79, 0x9b, 0xf9, 0xb4, 0x3b, 0xfb, 0xeb, 0x9f, 0x1f, 0xce, 0xf5, 0x42,
	0x5f, 0xe9, 0xf4, 0xaa, 0x20, 0x63, 0xd4, 0x96, 0xe6, 0xba, 0xae, 0x6c, 0x85, 0xbe, 0x4e, 0xe3,
	0xdf, 0x3e, 0xcc, 0x56, 0xaa, 0xcc, 0xcc, 0x4e, 0xdd, 0xd1, 0x52, 0x59, 0x85, 0x6f, 0x61, 0x6c,
	0xc8, 0x98, 0xbc, 0x2a, 0xd7, 0x99, 0xf0, 0x22, 0x2f, 0x99, 0xca, 0x0e, 0xa0, 0x80, 0x53, 0xad,
	0x0e, 0xfb, 0x4a, 0x65, 0xc2, 0xe7, 0x6f, 0xc7, 0xd6, 0xdd, 0xb3, 0x79, 0x41, 0xc6, 0xaa, 0x42,
	0x8b, 0x41, 0xe4, 0x25, 0x03, 0xd9, 0x01, 0x7c, 0x07, 0xb3, 0xcd, 0x3e, 0xa7, 0xd2, 0x7e, 0xa6,
	0xda, 0x8d, 0x12, 0x41, 0xe4, 0x25, 0x63, 0xd9, 0x87, 0x6e, 0x46, 0x49, 0xf6, 0x7b, 0x55, 0xdf,
	0xad, 0x97, 0x62, 0x18, 0x79, 0xc9, 0x50, 0x76, 0x00, 0x2f, 0x20, 0x64, 0xe1, 0x9b, 0x6a, 0x2f,
	0x46, 0x7c, 0xfd, 0xa9, 0xc7, 0x4b, 0x80, 0xb2, 0xca, 0xe8, 0xf6, 0x21, 0xfd, 0x48, 0x07, 0x71,
	0xca, 0xd2, 0x9e, 0x11, 0x3c, 0x03, 0x3f, 0x7f, 0x14, 0x21, 0x73, 0x3f, 0x7f, 0xc4, 0x37, 0x30,
	0xd2, 0xcd, 0xd9, 0x31, 0xb3, 0xb6, 0x43, 0x84, 0x60, 0x57, 0xa8, 0x8d, 0x00, 0xa6, 0x5c, 0x3b,
	0x66, 0xf2, 0x6d, 0x29, 0x26, 0xfc, 0x26, 0xd7, 0x8e, 0xe9, 0xaa, 0xb6, 0x62, 0x1a, 0x79, 0xc9,
	0x4c, 0x72, 0x1d, 0xff, 0xf4, 0xe0, 0xd5, 0x6d, 0x2b, 0xe8, 0xa6, 0x71, 0x1a, 0x13, 0x08, 0x0b,
	0xb2, 0x2a, 0x53, 0x56, 0xb1, 0x99, 0x93, 0xc5, 0x74, 0xae, 0xd3, 0xf9, 0x4d, 0xcb, 0xe4, 0xd3,
	0x57, 0xbc, 0xf8, 0xcb, 0xd9, 0xd5, 0x49, 0xe7, 0xed, 0x7b, 0x18, 0x14, 0x66, 0xcb, 0xae, 0x4e,
	0x16, 0xd8, 0x0c, 0xe0, 0xf9, 0x5f, 0x6a, 0xa5, 0x35, 0xd5, 0xab, 0x13, 0xe9, 0x0e, 0x5c, 0x8f,
	0x20, 0x70, 0xb3, 0xe2, 0x5f, 0x1e, 0x84, 0xc7, 0x27, 0x30, 0x86, 0x69, 0x49, 0x3f, 0xec, 0x51,
	0x19, 0xcb, 0x18, 0xcb, 0x1e, 0xfb, 0x77, 0x3d, 0xfe, 0x7f, 0xd6, 0xf3, 0xc2, 0x8a, 0x2f, 0x01,
	0xd4, 0x83, 0xdd, 0xb5, 0x2b, 0x08, 0x9a, 0x15, 0x74, 0xc4, 0x45, 0xa7, 0x30, 0xdb, 0x4f, 0xce,
	0xc9, 0x61, 0x13, 0x9d, 0xb6, 0x8d, 0xbf, 0xc1, 0x59, 0xff, 0x7f, 0x9c, 0xbd, 0xf6, 0xa0, 0x89,
	0xb5, 0xce, 0x24, 0xd7, 0xf8, 0x1a, 0x06, 0x35, 0xdd, 0xb3, 0xb2, 0x50, 0xba, 0x12, 0xcf, 0x61,
	0x58, 0xd3, 0xfd, 0x7a, 0xc9, 0x5a, 0x02, 0xd9, 0x34, 0xcf, 0x23, 0x1a, 0xf4, 0x22, 0x7a, 0x1d,
	0x7c, 0xf5, 0x75, 0x9a, 0x8e, 0x38, 0x34, 0x1f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x44, 0x03,
	0xbf, 0x7f, 0x15, 0x03, 0x00, 0x00,
}
